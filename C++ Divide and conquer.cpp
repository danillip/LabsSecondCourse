#include <iostream>

using namespace std;

/**
 * Функция для проверки, существует ли индекс i, такой что A[i] = i.
 * @param arr Упорядоченный массив целых чисел.
 * @param start Начальный индекс массива для поиска.
 * @param end Конечный индекс массива для поиска.
 * @return Индекс i, если такой найден, иначе -1.
 */
int findIndex(int arr[], int start, int end) {
    // Базовый случай: если начальный индекс превышает конечный, значит элемент не найден.
    if (start > end) {
        return -1;
    }

    // Найдем середину массива.
    int mid = (start + end) / 2;

    // Если A[mid] равно mid, значит мы нашли искомый элемент.
    if (arr[mid] == mid) {
        return mid;
    }
    // Если A[mid] больше, чем его индекс, искомый элемент может находиться в левой части массива.
    else if (arr[mid] > mid) {
        // Рекурсивно вызываем функцию для левой части массива.
        return findIndex(arr, start, mid - 1);
    }
    // Если A[mid] меньше, чем его индекс, искомый элемент может находиться в правой части массива.
    else {
        // Рекурсивно вызываем функцию для правой части массива.
        return findIndex(arr, mid + 1, end);
    }
}

int main() {
    int n;
    cout << "Введите размер массива: ";
    cin >> n;

    int arr[n];
    cout << "Введите элементы массива:\n";
    for (int i = 0; i < n; ++i) {
        cin >> arr[i];
    }

    // Вызываем функцию для поиска индекса i.
    int index = findIndex(arr, 0, n - 1);

    // Если индекс не равен -1, значит элемент найден.
    if (index != -1) {
        cout << "Индекс " << index << " найден, такой что A[" << index << "] = " << arr[index] << endl;
    } else {
        cout << "Такого индекса не существует.\n";
    }

    return 0;
}
